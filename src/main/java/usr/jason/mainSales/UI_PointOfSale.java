/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package usr.jason.mainSales;

import java.awt.Image;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jason
 */
public class UI_PointOfSale extends javax.swing.JFrame {
    
    private static String loggedFullname;
    private static String loggedAccountType;
    
    /**
     * Creates new form posMain
     */
    public UI_PointOfSale() {
        initComponents();
        this.setResizable(false);
        
        infoField_fullname.setText(loggedFullname);
        infoField_accountType.setText(loggedAccountType);
        
    }

    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        background = new javax.swing.JPanel();
        sidePanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        ImageIcon cart = new ImageIcon("files\\icons\\main.png");
        Image temp = cart.getImage().getScaledInstance(25, 25,  java.awt.Image.SCALE_SMOOTH);
        cart = new ImageIcon(temp);
        button_main = new javax.swing.JButton("", cart);
        jPanel2 = new javax.swing.JPanel();
        ImageIcon DBM_Register = new ImageIcon("files\\icons\\server_add.png");
        temp = DBM_Register.getImage().getScaledInstance(25, 25,  java.awt.Image.SCALE_SMOOTH);
        DBM_Register = new ImageIcon(temp);
        button_register = new javax.swing.JButton("", DBM_Register);
        jPanel3 = new javax.swing.JPanel();
        ImageIcon DBM_MODIFY = new ImageIcon("files\\icons\\server.png");
        temp = DBM_MODIFY.getImage().getScaledInstance(25, 25,  java.awt.Image.SCALE_SMOOTH);
        DBM_MODIFY = new ImageIcon(temp);
        button_modify = new javax.swing.JButton("", DBM_MODIFY);
        jPanel5 = new javax.swing.JPanel();
        ImageIcon DBM_Delete = new ImageIcon("files\\icons\\server_delete.png");
        temp = DBM_Delete.getImage().getScaledInstance(25, 25,  java.awt.Image.SCALE_SMOOTH);
        DBM_Delete = new ImageIcon(temp);
        button_delete = new javax.swing.JButton("", DBM_Delete);
        jPanel6 = new javax.swing.JPanel();
        ImageIcon UAM = new ImageIcon("files\\icons\\UAM.png");
        temp = UAM.getImage().getScaledInstance(25, 25,  java.awt.Image.SCALE_SMOOTH);
        UAM = new ImageIcon(temp);
        button_UAM = new javax.swing.JButton("", UAM);
        jPanel7 = new javax.swing.JPanel();
        ImageIcon LOGOUT = new ImageIcon("files\\icons\\logout.png");
        Image tempLogout = LOGOUT.getImage().getScaledInstance(25, 25,  java.awt.Image.SCALE_SMOOTH);
        LOGOUT = new ImageIcon(tempLogout);
        button_logout = new javax.swing.JButton("", LOGOUT);
        jPanel8 = new javax.swing.JPanel();
        button_transactionLog = new javax.swing.JButton("");
        headerPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        infoField_accountType = new javax.swing.JLabel();
        infoField_fullname = new javax.swing.JLabel();
        summaryPanel = new javax.swing.JPanel();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        subtotal = new javax.swing.JLabel();
        paid = new javax.swing.JLabel();
        due = new javax.swing.JLabel();
        finalButton = new javax.swing.JButton();
        displayField_finalTotal = new javax.swing.JLabel();
        displayField_paid = new javax.swing.JLabel();
        displayField_due = new javax.swing.JLabel();
        inputField_payment = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        displayArea_bill = new javax.swing.JTextArea();
        searchPanel = new javax.swing.JPanel();
        inputField_searchID = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        infoPanel = new javax.swing.JPanel();
        paid1 = new javax.swing.JLabel();
        paid2 = new javax.swing.JLabel();
        displayField_productName = new javax.swing.JLabel();
        displayField_productPrice = new javax.swing.JLabel();
        paid3 = new javax.swing.JLabel();
        displayField_productDiscount = new javax.swing.JLabel();
        percentSign = new javax.swing.JLabel();
        listPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        itemTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        background.setBackground(new java.awt.Color(204, 204, 204));

        sidePanel.setBackground(new java.awt.Color(70, 87, 117));

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(button_main, javax.swing.GroupLayout.PREFERRED_SIZE, 37, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(button_main, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(153, 153, 153));

        button_register.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_registerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(button_register, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(button_register, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(153, 153, 153));

        button_modify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_modifyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(button_modify, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(button_modify, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel5.setBackground(new java.awt.Color(153, 153, 153));

        button_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_deleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(button_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(button_delete, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel6.setBackground(new java.awt.Color(153, 153, 153));

        button_UAM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_UAMActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(button_UAM, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(button_UAM, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel7.setBackground(new java.awt.Color(153, 153, 153));

        button_logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_logoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(button_logout, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(button_logout, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel8.setBackground(new java.awt.Color(153, 153, 153));

        button_transactionLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_transactionLogActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(button_transactionLog, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(button_transactionLog, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout sidePanelLayout = new javax.swing.GroupLayout(sidePanel);
        sidePanel.setLayout(sidePanelLayout);
        sidePanelLayout.setHorizontalGroup(
            sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        sidePanelLayout.setVerticalGroup(
            sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        headerPanel.setBackground(new java.awt.Color(255, 255, 255));
        headerPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Name");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Account Type");

        infoField_accountType.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        infoField_accountType.setForeground(new java.awt.Color(255, 153, 0));
        infoField_accountType.setText("Account Type Goes Here");

        infoField_fullname.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        infoField_fullname.setForeground(new java.awt.Color(0, 0, 0));
        infoField_fullname.setText("Account Username Goes Here");

        javax.swing.GroupLayout headerPanelLayout = new javax.swing.GroupLayout(headerPanel);
        headerPanel.setLayout(headerPanelLayout);
        headerPanelLayout.setHorizontalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(infoField_fullname)
                    .addComponent(infoField_accountType))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        headerPanelLayout.setVerticalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(infoField_fullname))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(infoField_accountType))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        summaryPanel.setBackground(new java.awt.Color(255, 255, 255));
        summaryPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);

        subtotal.setBackground(new java.awt.Color(116, 121, 165));
        subtotal.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        subtotal.setForeground(new java.awt.Color(255, 0, 0));
        subtotal.setText("TOTAL");

        paid.setBackground(new java.awt.Color(116, 121, 165));
        paid.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        paid.setForeground(new java.awt.Color(116, 121, 141));
        paid.setText("PAID");

        due.setBackground(new java.awt.Color(116, 121, 165));
        due.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        due.setForeground(new java.awt.Color(116, 121, 141));
        due.setText("DUE/CHANGE");

        finalButton.setBackground(new java.awt.Color(129, 233, 189));
        finalButton.setFont(new java.awt.Font("MS UI Gothic", 1, 18)); // NOI18N
        finalButton.setForeground(new java.awt.Color(116, 121, 141));
        finalButton.setText("Confirm Sale");
        finalButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        finalButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        finalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finalButtonActionPerformed(evt);
            }
        });

        displayField_finalTotal.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        displayField_finalTotal.setForeground(new java.awt.Color(0, 0, 0));
        displayField_finalTotal.setText("-");

        displayField_paid.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        displayField_paid.setForeground(new java.awt.Color(0, 0, 0));
        displayField_paid.setText("-");

        displayField_due.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        displayField_due.setForeground(new java.awt.Color(0, 0, 0));
        displayField_due.setText("-");

        inputField_payment.setBackground(new java.awt.Color(255, 255, 255));
        inputField_payment.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        inputField_payment.setForeground(new java.awt.Color(0, 0, 0));
        inputField_payment.setText("Payment ...");
        inputField_payment.setToolTipText("Payment amount...");
        inputField_payment.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                inputField_paymentFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                inputField_paymentFocusLost(evt);
            }
        });
        inputField_payment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputField_paymentActionPerformed(evt);
            }
        });
        inputField_payment.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                inputField_paymentKeyPressed(evt);
            }
        });

        displayArea_bill.setBackground(new java.awt.Color(255, 255, 255));
        displayArea_bill.setColumns(20);
        displayArea_bill.setRows(5);
        jScrollPane2.setViewportView(displayArea_bill);

        javax.swing.GroupLayout summaryPanelLayout = new javax.swing.GroupLayout(summaryPanel);
        summaryPanel.setLayout(summaryPanelLayout);
        summaryPanelLayout.setHorizontalGroup(
            summaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(summaryPanelLayout.createSequentialGroup()
                .addGroup(summaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(summaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(summaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(summaryPanelLayout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(subtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(displayField_finalTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, summaryPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(summaryPanelLayout.createSequentialGroup()
                            .addGap(18, 18, 18)
                            .addGroup(summaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(summaryPanelLayout.createSequentialGroup()
                                    .addGroup(summaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(paid, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(displayField_paid, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(summaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(due, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(displayField_due, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGroup(summaryPanelLayout.createSequentialGroup()
                            .addGap(59, 59, 59)
                            .addComponent(finalButton, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(summaryPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(summaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inputField_payment, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        summaryPanelLayout.setVerticalGroup(
            summaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(summaryPanelLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(summaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(subtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(displayField_finalTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(summaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(summaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(summaryPanelLayout.createSequentialGroup()
                            .addComponent(due)
                            .addGap(9, 9, 9)
                            .addComponent(displayField_due)))
                    .addGroup(summaryPanelLayout.createSequentialGroup()
                        .addComponent(paid)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(displayField_paid)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(inputField_payment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addComponent(finalButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        searchPanel.setBackground(new java.awt.Color(255, 255, 255));
        searchPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        inputField_searchID.setBackground(new java.awt.Color(255, 255, 255));
        inputField_searchID.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        inputField_searchID.setForeground(new java.awt.Color(0, 0, 0));
        inputField_searchID.setText("Enter product ID...");
        inputField_searchID.setToolTipText("Product ID");
        inputField_searchID.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                inputField_searchIDFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                inputField_searchIDFocusLost(evt);
            }
        });
        inputField_searchID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputField_searchIDActionPerformed(evt);
            }
        });
        inputField_searchID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                inputField_searchIDKeyPressed(evt);
            }
        });

        searchButton.setBackground(new java.awt.Color(129, 233, 189));
        searchButton.setFont(new java.awt.Font("MS UI Gothic", 1, 14)); // NOI18N
        searchButton.setForeground(new java.awt.Color(116, 121, 141));
        searchButton.setText("Add");
        searchButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        searchButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout searchPanelLayout = new javax.swing.GroupLayout(searchPanel);
        searchPanel.setLayout(searchPanelLayout);
        searchPanelLayout.setHorizontalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(inputField_searchID, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );
        searchPanelLayout.setVerticalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(inputField_searchID, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(searchButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(15, 15, 15))
        );

        infoPanel.setBackground(new java.awt.Color(255, 255, 255));
        infoPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        paid1.setBackground(new java.awt.Color(116, 121, 165));
        paid1.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        paid1.setForeground(new java.awt.Color(116, 121, 141));
        paid1.setText("Product Name");

        paid2.setBackground(new java.awt.Color(116, 121, 165));
        paid2.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        paid2.setForeground(new java.awt.Color(116, 121, 141));
        paid2.setText("Price");

        displayField_productName.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        displayField_productName.setForeground(new java.awt.Color(0, 0, 0));
        displayField_productName.setText("-");

        displayField_productPrice.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        displayField_productPrice.setForeground(new java.awt.Color(0, 0, 0));
        displayField_productPrice.setText("-");

        paid3.setBackground(new java.awt.Color(116, 121, 165));
        paid3.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        paid3.setForeground(new java.awt.Color(116, 121, 141));
        paid3.setText("Discount");

        displayField_productDiscount.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        displayField_productDiscount.setForeground(new java.awt.Color(0, 0, 0));
        displayField_productDiscount.setText("-");

        percentSign.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        percentSign.setForeground(new java.awt.Color(0, 0, 0));
        percentSign.setText("%");

        javax.swing.GroupLayout infoPanelLayout = new javax.swing.GroupLayout(infoPanel);
        infoPanel.setLayout(infoPanelLayout);
        infoPanelLayout.setHorizontalGroup(
            infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(paid1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(paid2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(infoPanelLayout.createSequentialGroup()
                        .addComponent(displayField_productPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(paid3, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(displayField_productDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(percentSign))
                    .addComponent(displayField_productName, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        infoPanelLayout.setVerticalGroup(
            infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(paid1)
                    .addComponent(displayField_productName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(paid2)
                    .addComponent(displayField_productPrice)
                    .addComponent(paid3)
                    .addComponent(displayField_productDiscount)
                    .addComponent(percentSign))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        listPanel.setBackground(new java.awt.Color(255, 255, 255));
        listPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        listPanel.setForeground(new java.awt.Color(116, 121, 141));

        itemTable.setBackground(new java.awt.Color(255, 255, 255));
        itemTable.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        itemTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product", "Price", "Qty", "Discount", "Subtotal"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        itemTable.setGridColor(new java.awt.Color(153, 153, 153));
        itemTable.setSelectionBackground(new java.awt.Color(129, 233, 189));
        itemTable.setSurrendersFocusOnKeystroke(true);
        itemTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                itemTableKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                itemTableKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(itemTable);
        if (itemTable.getColumnModel().getColumnCount() > 0) {
            itemTable.getColumnModel().getColumn(0).setResizable(false);
            itemTable.getColumnModel().getColumn(0).setPreferredWidth(260);
            itemTable.getColumnModel().getColumn(1).setResizable(false);
            itemTable.getColumnModel().getColumn(1).setPreferredWidth(110);
            itemTable.getColumnModel().getColumn(2).setResizable(false);
            itemTable.getColumnModel().getColumn(2).setPreferredWidth(40);
            itemTable.getColumnModel().getColumn(3).setResizable(false);
            itemTable.getColumnModel().getColumn(3).setPreferredWidth(80);
            itemTable.getColumnModel().getColumn(4).setResizable(false);
            itemTable.getColumnModel().getColumn(4).setPreferredWidth(110);
        }

        javax.swing.GroupLayout listPanelLayout = new javax.swing.GroupLayout(listPanel);
        listPanel.setLayout(listPanelLayout);
        listPanelLayout.setHorizontalGroup(
            listPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        listPanelLayout.setVerticalGroup(
            listPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );

        javax.swing.GroupLayout backgroundLayout = new javax.swing.GroupLayout(background);
        background.setLayout(backgroundLayout);
        backgroundLayout.setHorizontalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundLayout.createSequentialGroup()
                .addComponent(sidePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(headerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(backgroundLayout.createSequentialGroup()
                        .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(backgroundLayout.createSequentialGroup()
                                .addComponent(searchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(infoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(listPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(summaryPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        backgroundLayout.setVerticalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sidePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(backgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(headerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(summaryPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(backgroundLayout.createSequentialGroup()
                        .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(searchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(infoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(listPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 720));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private boolean isAdmin() throws Exception{
        if(String.valueOf(infoField_accountType.getText()).equals("Administrator")){
            return true;
        }
        else{
            return false;
        }
    }
    
    private void getProductDetails(String productID) throws Exception{
        
        String[] productInfo = new String[3];
        productInfo = DatabaseHandler.getProductInfo(productID);
        
        displayField_productName.setText(productInfo[0]);
        displayField_productPrice.setText(productInfo[1]);
        displayField_productDiscount.setText(productInfo[2]);
        
        addToTable();
    }
    
    //ADD THE SEARCHED ITEM ID TO THE TABLE.
    private void addToTable(){
        
        //DefaultTableModel Initialization
        DefaultTableModel tableModel = new DefaultTableModel();
        tableModel = (DefaultTableModel) itemTable.getModel();

        
        //Reference Variables.
        String newProductName = String.valueOf(displayField_productName.getText());
        double newProductDiscount = Double.parseDouble(displayField_productDiscount.getText());
        double newProductDiscountPercentage = (100 - newProductDiscount)/100;
        double newProductPrice = Double.parseDouble(displayField_productPrice.getText());
        int newProductQty = 1;

        
        //Dynamic Variable Defaults
        double newProductSubtotal = 0.0;
        
        
        //EXECUTES IF THE TABLE IS 100% EMPTY (FIRST ENTRY)
        if (itemTable.getRowCount() <= 0) {
            double initialSubtotal = Double.parseDouble(displayField_productPrice.getText()) * (double) newProductQty;
            newProductSubtotal = initialSubtotal * newProductDiscountPercentage;
            
            tableModel.addRow(new Object[]{
                newProductName,
                newProductPrice,
                newProductQty,
                newProductDiscount,
                newProductSubtotal,
            });
        }
        
        
        //EXECUTES IF THE TABLE IS NOT EMPTY (SECOND AND ON ENTRY)
        else {
            boolean itemAlreadyExists = false;
            
            for (int i = 0; i < itemTable.getRowCount(); i++) {
                //DETECT IF ITEM ALREADY EXISTS -- IF SO, ADD QUANTITY BY ONE & UPDATE SUBTOTAL.
                if (getProduct(i).equals(newProductName)) {
                    itemAlreadyExists = true;
                    
                    setQuantity((getQuantity(i) + 1), i);         
                    refreshTable();
                    break; //BREAK LOOP -- SAME ENTRY ALREADY MODIFIED.
                }
            }
            
            //EXECUTES IF CURRENT ADDED ENTRY IS NOT IN TABLE YET.
            if( ! itemAlreadyExists ) {
                double initialSubtotal = Double.parseDouble(displayField_productPrice.getText()) * (double) newProductQty;
                newProductSubtotal = initialSubtotal * newProductDiscountPercentage;

                tableModel.addRow(new Object[]{
                    newProductName,
                    newProductPrice,
                    newProductQty,
                    newProductDiscount,
                    newProductSubtotal,
                });

            }
        }

        adjustSummary();
    }
    
    
    //ADJUST SUMMARY TAB.
    private void adjustSummary(){
        
        //Get FINAL SUBTOTAL
        double finalSubtotal = 0;
        for (byte i = 0; i < itemTable.getRowCount(); ++i) {
            finalSubtotal = finalSubtotal + getSubtotal(i);
        }
        displayField_finalTotal.setText(String.valueOf(finalSubtotal));
    }
    
    private void adjustSummary(double payment){
        adjustSummary();
        
        double finalSubtotal = 0;
        for (byte i = 0; i < itemTable.getRowCount(); ++i) {
            finalSubtotal = finalSubtotal + getSubtotal(i);
        }
        
        double amountDue = finalSubtotal - payment;
        displayField_paid.setText(String.valueOf(payment));
        displayField_due.setText(String.valueOf(amountDue));
        
    }
    
    //DISPLAY BILL
    private void displayBill(){
        
        //BILL HEADER
        bLine(
                "==========================\n"
                + "==                      BILL                     ==\n"
                + "==========================\n\n\n"
        );
        
        //BILL BODY
        for(int i = 0;i<itemTable.getRowCount();i++){
            entryLine(i);
        }
        
        //BILL FOOTER
        bLine(
                "\n\n"
                + "==========================\n"
                + "TOTAL" + "\t" + displayField_finalTotal.getText() + "\n"
                + "==========================\n"
        );
        
    }
    
    private void bLine(String str){
        displayArea_bill.setText(displayArea_bill.getText() + str);
    }
    
    private void entryLine(int index){
        bLine(
                getProduct(index) + "\n"
                + getQuantity(index) + "\t" + getSubtotal(index) + "\n"
                        
        );
        
        
    }
    
    //REFRESH TABLE FUNCTION FOR WHEN QUANTITY IS MODIFIED ON TABLE.
    private void refreshTable(){
        for (int i = 0; i < itemTable.getRowCount(); i++) {
            double quantity = getQuantity(i);
            double discount = getDiscountMultiplier(i);
            double price = getPrice(i);
            
            double newSubtotal = quantity * price * discount;
            setSubtotal(newSubtotal, i);
        }
        adjustSummary();
    }
    
    /*
    MODULARIZED GETTER FUNCTIONS TO READ TABLE.
    */
    private String getProduct(int row){
        return String.valueOf(itemTable.getValueAt(row, 0));
    }
    
    private Double getPrice(int row){
        return (Double) itemTable.getValueAt(row, 1);
    }
    
    private Integer getQuantity(int row){
        return (Integer) itemTable.getValueAt(row, 2);
    }
    
    private Double getDiscountMultiplier(int row){
        double discount = 100.0 - ( (Double)itemTable.getValueAt(row, 3) );
        return discount/100.0;
    }
    
    private Double getSubtotal(int row){
        return (Double) itemTable.getValueAt(row, 4);
    }
    /*
    MODULARIZED SETTER FUNCTIONS TO READ TABLE.
    */
    private void setSubtotal(double newValue, int row){
        itemTable.setValueAt(newValue, row, 4);
    }
    private void setQuantity(int newValue, int row){
        itemTable.setValueAt(newValue, row, 2);
    }
    
    
    
    // \\ // \\ // \\ // \\ // \\ // \\ // \\ // \\ //
    /*
    AUTO-GENERATED CODE BY NETBEANS JFrame Form EDITOR.
    AUTO-GENERATED CODE BY NETBEANS JFrame Form EDITOR.
    AUTO-GENERATED CODE BY NETBEANS JFrame Form EDITOR.
    AUTO-GENERATED CODE BY NETBEANS JFrame Form EDITOR.
    AUTO-GENERATED CODE BY NETBEANS JFrame Form EDITOR.
    */
    // \\ // \\ // \\ // \\ // \\ // \\ // \\ // \\ //
    private void finalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finalButtonActionPerformed
        //CONFIRM SALE BUTTON -- THIS PRINTS THE BILL.
        displayBill();
        try{
            displayArea_bill.print();
        }
        catch (Throwable t){}
    }//GEN-LAST:event_finalButtonActionPerformed
    
    
    private void inputField_searchIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputField_searchIDKeyPressed
        //ITEMID SEARCH FIELD -- WORKS ON "ENTER" KEY PRESS.
        //IDENTICAL TO searchButtonActionPerformed()
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            String productCode = inputField_searchID.getText();
            try{
                getProductDetails(productCode);
            }
            catch(Exception t){
                t.printStackTrace();
                System.out.println(t);
                System.out.println("SOMETHING WENT WRONG!");
            }
        }
        
    }//GEN-LAST:event_inputField_searchIDKeyPressed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        //ITEM ID SEARCH FIELD -- WORKS ON PRESSING THE 'ADD' BUTTON.
        //IDENTICAL TO inputField_searchIDKeyPressed()
        String productCode = inputField_searchID.getText();
        try{
            getProductDetails(productCode);
        }
        catch(Throwable t){}
    }//GEN-LAST:event_searchButtonActionPerformed

    private void inputField_searchIDFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_inputField_searchIDFocusGained
        //UNUSED
    }//GEN-LAST:event_inputField_searchIDFocusGained

    private void inputField_searchIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputField_searchIDActionPerformed
        //UNUSED
    }//GEN-LAST:event_inputField_searchIDActionPerformed

    private void inputField_searchIDFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_inputField_searchIDFocusLost
        //UNUSED
    }//GEN-LAST:event_inputField_searchIDFocusLost

    private void inputField_paymentFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_inputField_paymentFocusGained
        //UNUSED
    }//GEN-LAST:event_inputField_paymentFocusGained

    private void inputField_paymentFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_inputField_paymentFocusLost
        //UNUSED
    }//GEN-LAST:event_inputField_paymentFocusLost

    private void inputField_paymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputField_paymentActionPerformed
        //UNUSED
    }//GEN-LAST:event_inputField_paymentActionPerformed

    private void inputField_paymentKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputField_paymentKeyPressed
        //CUSTOMER PAYMENT FIELD -- WORKS ON "ENTER" KEY PRESS.
        double payment;
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                payment = Double.parseDouble(inputField_payment.getText());
                adjustSummary(payment);
            } catch (Exception e) {
                System.out.println("ERROR: INPUT IS NOT A NUMBER!");
            }
        }

    }//GEN-LAST:event_inputField_paymentKeyPressed

    private void itemTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemTableKeyPressed
        //REFRESHES THE BILLING TABLE ON QTY CHANGE -- REACTS TO "ENTER" KEY PRESS.
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            refreshTable();
        }
    }//GEN-LAST:event_itemTableKeyPressed

    private void itemTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemTableKeyReleased
        //REFRESHES THE BILLING TABLE ON QTY CHANGE -- REACTS TO "ENTER" KEY RELEASE.
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            refreshTable();
        }
    }//GEN-LAST:event_itemTableKeyReleased

    private void button_registerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_registerActionPerformed
        //DISPLAY THE DATABASE MANAGER (MODIFY ENTRY)
        try{
            if (!isAdmin()) {
                UI_Popup.call("You are not allowed to access this feature.");
            }
            else{
                UI_DBM_Register.main(null);
                this.dispose();
            }
            
        }
        catch(Throwable t){}
        
    }//GEN-LAST:event_button_registerActionPerformed

    private void button_modifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_modifyActionPerformed
        // TODO add your handling code here:
        try{
            if (!isAdmin()) {
                UI_Popup.call("You are not allowed to access this feature.");
            }
            else{
                UI_DBM_Modify.main(null);
                this.dispose();
            }
            
        }
        catch(Throwable t){}
        
    }//GEN-LAST:event_button_modifyActionPerformed

    private void button_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_deleteActionPerformed
        // TODO add your handling code here:
        try{
            if (!isAdmin()) {
                UI_Popup.call("You are not allowed to access this feature.");
            }
            else{
                UI_DBM_Delete.main(null);
                this.dispose();
            }
            
        }
        catch(Throwable t){}
        
    }//GEN-LAST:event_button_deleteActionPerformed

    private void button_UAMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_UAMActionPerformed
        //NON REMOVEABLE JUNK CODE(???)
        try{
            if (!isAdmin()) {
                UI_Popup.call("You are not allowed to access this feature.");
            }
            else{
                UI_UAM_Registration.main(null);
                this.dispose();
            }
            
        }
        catch(Throwable t){}
    }//GEN-LAST:event_button_UAMActionPerformed

    private void button_logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_logoutActionPerformed
        // TODO add your handling code here:
        this.dispose();
        UI_UAM_Login.main(null);
    }//GEN-LAST:event_button_logoutActionPerformed

    private void button_transactionLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_transactionLogActionPerformed
        // TODO add your handling code here:
        UI_Popup.call("Feature in development");
    }//GEN-LAST:event_button_transactionLogActionPerformed
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UI_PointOfSale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UI_PointOfSale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UI_PointOfSale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UI_PointOfSale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UI_PointOfSale().setVisible(true);
            }
        });

        try {
            String cacheDirectory = "files\\cache\\temp.txt";
            if (args.length == 0 || args == null) { //IF ARGS IS EMPTY, MEANING NOT LOGGING IN, READ FROM CACHE.
                
                BufferedReader reader = new BufferedReader(new FileReader(cacheDirectory));
                String data = reader.readLine();
                String[] loggedData = data.trim().split("|"); //index 0 is username, index 1 is account type.
                loggedFullname = loggedData[0];
                loggedFullname = loggedData[1];
                
            } else { //IF MAIN HAS ARGS, MEANING NEW USER.
                loggedFullname = args[0];
                loggedAccountType = args[1];
                File cacheFile = new File(cacheDirectory);
                cacheFile.delete();
                cacheFile.createNewFile();
                FileWriter writer = new FileWriter(cacheDirectory);
                writer.write(loggedFullname + "|" + loggedAccountType);
            }
        } catch (Exception e) {
        }


        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel background;
    private javax.swing.JButton button_UAM;
    private javax.swing.JButton button_delete;
    private javax.swing.JButton button_logout;
    private javax.swing.JButton button_main;
    private javax.swing.JButton button_modify;
    private javax.swing.JButton button_register;
    private javax.swing.JButton button_transactionLog;
    private javax.swing.JTextArea displayArea_bill;
    private javax.swing.JLabel displayField_due;
    private javax.swing.JLabel displayField_finalTotal;
    private javax.swing.JLabel displayField_paid;
    private javax.swing.JLabel displayField_productDiscount;
    private javax.swing.JLabel displayField_productName;
    private javax.swing.JLabel displayField_productPrice;
    private javax.swing.JLabel due;
    private javax.swing.JButton finalButton;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JLabel infoField_accountType;
    private javax.swing.JLabel infoField_fullname;
    private javax.swing.JPanel infoPanel;
    private javax.swing.JTextField inputField_payment;
    private javax.swing.JTextField inputField_searchID;
    private javax.swing.JTable itemTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JPanel listPanel;
    private javax.swing.JLabel paid;
    private javax.swing.JLabel paid1;
    private javax.swing.JLabel paid2;
    private javax.swing.JLabel paid3;
    private javax.swing.JLabel percentSign;
    private javax.swing.JButton searchButton;
    private javax.swing.JPanel searchPanel;
    private javax.swing.JPanel sidePanel;
    private javax.swing.JLabel subtotal;
    private javax.swing.JPanel summaryPanel;
    // End of variables declaration//GEN-END:variables
}
